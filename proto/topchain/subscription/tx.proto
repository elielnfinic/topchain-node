syntax = "proto3";

package topchain.subscription;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "topchain/subscription/params.proto";

option go_package = "topchain/x/subscription/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams (MsgUpdateParams ) returns (MsgUpdateParamsResponse );

  // rpc CreateOffer  (MsgCreateOffer  ) returns (MsgCreateOfferResponse  );
  // rpc CancelOffer  (MsgCancelOffer  ) returns (MsgCancelOfferResponse  );
  // rpc UpdateOffer  (MsgUpdateOffer  ) returns (MsgUpdateOfferResponse  );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option           (amino.name) = "topchain/x/subscription/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.

  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateOffer {
  option (cosmos.msg.v1.signer) = "requester";
  string requester  = 1;
  string cro_id    = 2;
  uint64 amount  = 3;
  uint64 start_block = 4;
  uint64 end_block = 5;
}

message MsgCreateOfferResponse {
  string offer_id = 1;
}

message MsgCancelOffer {
  option (cosmos.msg.v1.signer) = "requester";
  string requester  = 1;
  string offer_id = 2;
}

message MsgCancelOfferResponse {}

message MsgUpdateOffer {
  option (cosmos.msg.v1.signer) = "requester";
  string requester  = 1;
  string offer_id = 2;
  // these fields should be optional, errors with pulsar
  uint64 amount  = 3;
  uint64 start_block = 4;
  uint64 end_block = 5;
}

message MsgUpdateOfferResponse {}
