syntax = "proto3";

package topchain.subscription;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "topchain/subscription/params.proto";
import "topchain/subscription/offer.proto";
import "topchain/subscription/subscription.proto";

option go_package = "topchain/x/subscription/types";

// Query defines the gRPC querier service.
service Query {

  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/topchain/subscription/params";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryOfferRequest {
  string id = 1;
}

message QueryOfferResponse {
  topchain.subscription.Offer offer = 1 [(gogoproto.nullable) = false];
}

message QuerySubscriptionRequest {
  string id = 1;
}

message QuerySubscriptionResponse {
  topchain.subscription.Subscription subscription = 1 [(gogoproto.nullable) = false];
}
