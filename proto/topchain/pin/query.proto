syntax = "proto3";

package topchain.pin;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "topchain/pin/params.proto";
import "topchain/pin/pin_request.proto";

option go_package = "topchain/x/pin/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/topchain/pin/params";
  
  }
  
  // Queries a list of PinRequest items.
  rpc PinRequest    (QueryGetPinRequestRequest) returns (QueryGetPinRequestResponse) {
    option (google.api.http).get = "/topchain/pin/pin_request/{index}";
  
  }
  rpc PinRequestAll (QueryAllPinRequestRequest) returns (QueryAllPinRequestResponse) {
    option (google.api.http).get = "/topchain/pin/pin_request";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetPinRequestRequest {
  string index = 1;
}

message QueryGetPinRequestResponse {
  PinRequest pinRequest = 1 [(gogoproto.nullable) = false];
}

message QueryAllPinRequestRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPinRequestResponse {
  repeated PinRequest                             pinRequest = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

