syntax = "proto3";

package topchain.requester;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "topchain/requester/params.proto";

option go_package = "topchain/x/requester/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams        (MsgUpdateParams       ) returns (MsgUpdateParamsResponse       );
  rpc RequestSubscription (MsgRequestSubscription) returns (MsgRequestSubscriptionResponse);
  rpc CancelSubscription  (MsgCancelSubscription ) returns (MsgCancelSubscriptionResponse );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                            "authority";
  option           (amino.name) = "topchain/x/requester/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgRequestSubscription {
  option (cosmos.msg.v1.signer) = "creator";
  string creator  = 1;
  string croid    = 2;
  string ammount  = 3;
  string duration = 4;
}

message MsgRequestSubscriptionResponse {
  string subscriptionid = 1;
}

message MsgCancelSubscription {
  option (cosmos.msg.v1.signer) = "creator";
  string creator        = 1;
  string subscriptionid = 2;
}

message MsgCancelSubscriptionResponse {}

